{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Developer/RPSGDApp/client/src/components/ConnectWalletButton.jsx\";\nimport React from \"react\";\nimport { requestAccount } from \"../utils/contractServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnectWalletButton({\n  setAccount\n}) {\n  const connectWallet = async () => {\n    try {} catch (error) {\n      console.error(\"Cant get wallet info\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connectWallet,\n    children: \"Connect Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n_c = ConnectWalletButton;\nexport default ConnectWalletButton;\nvar _c;\n$RefreshReg$(_c, \"ConnectWalletButton\");","map":{"version":3,"names":["React","requestAccount","jsxDEV","_jsxDEV","ConnectWalletButton","setAccount","connectWallet","error","console","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ray/Developer/RPSGDApp/client/src/components/ConnectWalletButton.jsx"],"sourcesContent":["import React from \"react\";\nimport { requestAccount } from \"../utils/contractServices\";\n\nfunction ConnectWalletButton({setAccount}) {\n    const connectWallet = async () => {\n        try{\n\n        }\n        catch (error) {\n            console.error(\"Cant get wallet info\", error);\n        }\n    };\n    return <button onClick={connectWallet}>Connect Wallet</button>;\n}\n\nexport default ConnectWalletButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,mBAAmBA,CAAC;EAACC;AAAU,CAAC,EAAE;EACvC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAG,CAEH,CAAC,CACD,OAAOC,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EACD,oBAAOJ,OAAA;IAAQM,OAAO,EAAEH,aAAc;IAAAI,QAAA,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAClE;AAACC,EAAA,GAVQX,mBAAmB;AAY5B,eAAeA,mBAAmB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}